% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rename.R
\name{rename}
\alias{rename}
\title{Rename variables}
\usage{
rename(.data, ...)
}
\arguments{
\item{.data}{A tbl. All main verbs are S3 generics and provide methods
for \code{\link[=tbl_df]{tbl_df()}}, \code{\link[dtplyr:tbl_dt]{dtplyr::tbl_dt()}} and \code{\link[dbplyr:tbl_dbi]{dbplyr::tbl_dbi()}}.}

\item{...}{<\code{\link[=dplyr_tidy_select]{tidy-select}}> Use \code{new_name = old_name}
to rename selected variables.}
}
\value{
An object of the same type as \code{.data}.
\itemize{
\item Rows are not affected.
\item Column names are changed; column order is preserved
\item Data frame attributes are preserved.
\item Groups are updated to reflect new names.
}
}
\description{
Rename individual variables using \code{new_name = old_name} syntax.
}
\section{Scoped selection and renaming}{


Use the three scoped variants (\code{\link[=rename_all]{rename_all()}}, \code{\link[=rename_if]{rename_if()}}, \code{\link[=rename_at]{rename_at()}})
to renaming a set of variables with a function.
}

\examples{
iris <- as_tibble(iris) # so it prints a little nicer
rename(iris, petal_length = Petal.Length)
}
\seealso{
Other single table verbs: 
\code{\link{arrange}()},
\code{\link{filter}()},
\code{\link{mutate}()},
\code{\link{select}()},
\code{\link{slice}()},
\code{\link{summarise}()}
}
\concept{single table verbs}
